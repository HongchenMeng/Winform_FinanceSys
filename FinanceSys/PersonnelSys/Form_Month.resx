<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnok.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFtJREFUOE9jYKAS
        +A80hxwMt/5/QwPEgAMHDuDFMDVQC8kzAMm15BkAcy1y8JHkhUFsAJLTcEYpSA1OL8AkiaGxRiMxLgBp
        xOsCXCkSlsAGrwGgREVRZiI7UwMACXFkDZul3iAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btncancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAE1JREFUOE9jYBgF
        9AiBhv8MDAjc0ABiYwXoEjBN6Iob/uMwBFkDTlugpmGVR3YqoaAhaADFLsDlf5DLcIYBIWcDtYJjgJDr
        CJsz3FQAABQAM+HXX9zNAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAEBAAAAEACABoBQAARgAAACAgAAABAAgAqAgAAK4FAAAgIBAAAQAEAOgCAABWDgAAEBAQAAEA
        BAAoAQAAPhEAACgAAAAQAAAAIAAAAAEACAAAAAAAQAEAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAACAAACA
        AAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyqYAAAoEAAAVCAAAKRAAAFIAAABqAAAAcwAAAJQAAABq
        MQAAcykAYkEAAAC9AAAxlAAAAJwxAEreAAAxzTEAvXsAADzTPADelAAAXeNdAPakIABz7nMA/7Q5AP+9
        SgD/xWIAlP+UAP/NewD/1YMA/9WUAP/erADV/9UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADw+/8ApKCgAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8A9fX19fX1
        DPUKCvX19fX19fX19fUMDA8PEgwKCvX19fX19fUMDw8PEA8PDQwK9fX19Q0NEBAPDxANDQ8NDAr19fUN
        FgsaFA0NHRsNDw0MCvX1DxAQCx8fHR0bGwwPGgr1DxgUFhYMHx8dHRsZDAz1Ew8aFBAOICEfHR0bGxkZ
        E/UPFxcWESElJB8dHRsbGRP1DxoaFBEkIyYkHx0dHR0Z9fUUHhwUFhEjJSMhCwsKCvX1FCInIhQQDCEh
        Cw0NDAr19fUUIiccFBAMCw0VFQ319fX19RQeHhwXFRUUFQ319fX19fX1FBQaGhQUDQ319fX19fX19fX1
        Dw8PD/X19fX19fw/woHwD8CB4AcgA4ADAgCAATwCgAEgAwAABAAAAQCgAAHBgQABwIGAAQIAgAFYAsAD
        IAPgB8SB8A8AAPw/wYEoAAAAIAAAAEAAAAABAAgAAAAAAIAEAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAA
        gAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwADA3MAA8MqmAAAFAQAAJgUAACsDAAA3BAAlGAAAMSAAAABS
        AAA9KQAAAFIYAABtAAAAcwAAAJQAAAB/GAAAajEAAG0uAABzKQBiQQAAAIEsAAC9AAAAnDEADKcpAINa
        AAASrCUAH7gdAJNkAAAlvRkAAP8AADHIEAA+0wgArHMAAK91AABK3gAAMc0xADjVKQC9ewAAP94hAEXm
        GQDFgAAATO4QANWLAABd/wgAX/8QAOCTCwDomBMAav8xAO6cGADwnhoA9qQgAPypJgD/ri0A/7Y8AJT/
        agD/vUoA/71NAJr/eQD/vVoA/8VqAP/IcgD/y3sAtP+0AP/VlAD/3qwA/+jEAOb/1QD58NwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8Pv/AKSgoACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////APX1
        9fX19fX19fX19RAQCgoKCgoK9fX19fX19fX19fX19fX19fX19fX1EBATGxsZFBQZGRALCgr19fX19fX1
        9fX19fX19fX1EhIbGxsdHRUVGRQUGBcQEAsK9fX19fX19fX19fX19RMbGx0dHRcUHRwcHRgbGxcQEAsK
        9fX19fX19fX19fUTGx0dHR0XHxcUKykcHRQXGxsQEAsK9fX19fX19fX1Ex0qHRkdHR0NHxcUMikcKR0Q
        GxcQEAsK9fX19fX19RMdIR0hIR0dHQ0xJxcUHRoXFCkXGxsXEAsK9fX19fUVHCEhHPohIR0dHQ0NJxcn
        JxAXJRwdGxsXEAsK9fX19RUqISEhIR0hHR0dEg0xLy8nJxodKR0bGxcXEAr19fUVJiYmJi0hIR0dHRI7
        ODQ0MS8nJxIdFxsbGxcQCwr19RUrKyYqKiYdHRISOzs7ODgxMS8nEhcXGxAbFxALCvX1FS4rKyYmHRIS
        Ozs8Ojs7ODg0Ly8nCxAUFBkXEAsK9RUwLi4uKyoSOzs/Pz8/PDs7ODcxMSwvGgsQEBANGhEOFTAwMC4u
        KiUSQUJCPz8/PDs7OTQxLCwnLyIiHxoaEQ4VMDAwMCsTEkJGRENCPz88PDs6OTcxMSwsJy8iHx8aDhUw
        MjAwKx0TREZGRkRCPz88Ozo5OTUxLy8sJyciIhoOFTIyMjMrFRNER0dGRkRCPzw8Ozo4OTcxMS8sLCci
        Hw8VPT02M/oqE0JHR0dGRkJBPzw8Ozs5Nzc1MS8sJyIfERU9PTMzISEdE0RISEdGREI+Pj88Ozk4Nzc3
        NTEsLB8RFTY9PTApIR0TQkhKSEZGQxcSPjw7Ozs4OQsLMSwoGhr1HD09MPopHhUTRkpIRyshHRcQQj88
        Og0MCw0MLB8a9fUVPT09NjYqHRUTRkpHRj09FTxCPz8LDRATFBMMHxr19RVFPT09PSoeFRNCR0dGLS1G
        QkJBCw0TGxsNEBAMGvX19RVART09NhweFRNCR0ZGRkRCQRAQExsVFxsUEAr19fX1FUBJPT02KhwdFRMT
        EkZEQkEQExsVFB0dGxQNCvX19fX1FUBJPTYwHBweHRUVEBMTEBQbFRUdHRsQEAv19fX19fX1FUBJQD0w
        KhweHR0VFRUVFRwdHRsbEA0L9fX19fX19fX1FUBJQEA2MCMcHB4dHR0VHBwbFBQXC/X19fX19fX19fX1
        FUBFSUlAMCoqIxwcICAVFRsbFwv19fX19fX19fX19fX1FRVARUVJMC4qJiAgIBsUFBIQ9fX19fX19fX1
        9fX19fX19RUVFTAwLi4qKiYUEhIS9fX19fX19fX19fX19fX19fX19fX1FRYWFhYVFRD19fX19fX19fX1
        9fX/8A///4AB//4AAH/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgAAAAYAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABgAAAAcAAAAPAAAAD4AAAB/AAAA/4AAAf/AAAP/4A
        AH//gAH///AP/ygAAAAgAAAAQAAAAAEABAAAAAAAgAIAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAACAAACA
        AAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAA
        IgAAAAAAAAAAAAAAAAACIiIiIiIAAAAAAAAAAAACIiIiIiIiIiAAAAAAAAAAIiIiIiIiIiIiAAAAAAAA
        AiIiImIqoiIiIiAAAAAAACKiIiIGIqoqIiIiAAAAAAKiIiIiBmIiYioqIiAAAAAiKioiIiAGIiIqIiIi
        AAAAKiIiIiIiBuZmIqIiIiAAAqKqKioiLuZm5mIiIiIgAAIqIioiIubu5mbiIiIiIAACoqKiIu5ubm5u
        ZiIiIiAAKqqqIu7u7u7m5u5mIiAGYCqqoqou7u7ubuZm5mZmZmAqqqoi7u7u7u5u5mZmZmZgKqoqIu7u
        7u7u7m5u5mZmYCqiqiLu7u7u7u7m5mbmZmAqqqKi7+/u7u7u7m7mZmZgKqKiIi7+7+7u7u7ubu5mYCqq
        KiIu7v7uIu7u5uAG5mYCqqoiIv7voiIu7mAAAGZgAqqqqiIu/u7i7u4AIiIGYAKquiqiLu76ru7gAiIC
        IGAAKqqqIqL+7u7uIiIiIiAAACr7qqIiIi7u4iIiIiIAAAACr6+iKiIqIiIiIiIiAAAAACr6qqIqIiIi
        IiIiAAAAAAACr7uqIioioiIiIgAAAAAAACqv+qqiKqIqIiAAAAAAAAACKqv6qqIqIiIgAAAAAAAAAAIi
        qqqqoiIgAAAAAAAAAAAAACIiIiIAAAAAAAD/8A///4AB//4AAH/8AAA/+AAAH/AAAA/gAAAHwAAAA8AA
        AAOAAAABgAAAAYAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABgAAAAcAA
        AAPAAAAD4AAAB/AAAA/4AAAf/AAAP/4AAH//gAH///AP/ygAAAAQAAAAIAAAAAEABAAAAAAAwAAAAAAA
        AAAAAAAAEAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD/
        /wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAiIAAAAAAAIiIiIAAAAiIiIiIiAAACIKIiZiIgAAIi
        DubmYCoAKiIg7u5mAAYiIi7u7mZmYCoiLu7u5mZgKqIu7u7ubmACqiIu7uAAAAKioiDuAiAAACqqIgAi
        IgAAAqKqIiIgAAAAIqIiIgAAAAAAIiIAAAD8P8KB8A/BgeAHAACAAyoAgAEBAIABAAAAAEgCAAECAAAB
        KQIAAUgCgAEEAIABcQHAAykB4AcgA/APAgD8PzwC
</value>
  </data>
</root>